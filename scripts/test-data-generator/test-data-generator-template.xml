<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="{{ name }}"
           tests="{{ tests }}"
           skipped="0"
           failures="{{ failures }}"
           errors="0"
           timestamp="{{ timestamp }}"
           hostname="dummy.host.name.local"
           time="{{ '%0.3f'| format(time|float) }}">

    <properties/>
    {% for test in testcases %}
        {% if test.is_failed %}
            <testcase name="{{ test.name }}" classname="{{ test.classname }}" time="{{ '%0.3f'| format(test.time|float) }}">
                <failure message="org.mockito.exceptions.verification.NeverWantedButInvoked: &#10;mapper.save(MyModel(name=item), &lt;any&gt;);&#10;Never wanted here:&#10;-&gt; at ch.yvu.teststore.common.CassandraRepositoryTest.canSaveAnItem(CassandraRepositoryTest.kt:54)&#10;But invoked here:&#10;-&gt; at ch.yvu.teststore.common.CassandraRepository.save(CassandraRepository.kt:13)&#10;"
                         type="org.mockito.exceptions.verification.NeverWantedButInvoked">
                    org.mockito.exceptions.verification.NeverWantedButInvoked:
                    mapper.save(MyModel(name=item), &lt;any&gt;);
                    Never wanted here:
                    -&gt; at ch.yvu.teststore.common.CassandraRepositoryTest.canSaveAnItem(CassandraRepositoryTest.kt:54)
                    But invoked here:
                    -&gt; at ch.yvu.teststore.common.CassandraRepository.save(CassandraRepository.kt:13)

                    at ch.yvu.teststore.common.CassandraRepositoryTest.canSaveAnItem(CassandraRepositoryTest.kt:54)
                    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
                    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
                    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                    at java.lang.reflect.Method.invoke(Method.java:497)
                    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
                    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
                    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
                    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
                    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
                    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
                    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
                    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
                    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
                    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
                    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
                    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
                    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
                    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
                    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:105)
                    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56)
                    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64)
                    at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50)
                    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
                    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
                    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                    at java.lang.reflect.Method.invoke(Method.java:497)
                    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
                    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
                    at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
                    at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
                    at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
                    at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106)
                    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
                    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
                    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                    at java.lang.reflect.Method.invoke(Method.java:497)
                    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
                    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
                    at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360)
                    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)
                    at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)
                    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
                    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
                    at java.lang.Thread.run(Thread.java:745)
                </failure>
            </testcase>
        {% else %}
            <testcase name="{{ test.name }}" classname="{{ test.classname }}" time="{{ '%0.3f'| format(test.time|float) }}"/>
        {% endif %}
    {% endfor %}
    <system-out><![CDATA[]]></system-out>
    <system-err><![CDATA[]]></system-err>
</testsuite>